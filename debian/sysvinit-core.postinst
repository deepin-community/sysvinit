#! /bin/sh
#
# sysvinit-core postinst
#

set -e

# Restart init.
do_restart() {
	INITCTL=/run/initctl
	case "$(uname -s)" in
	  *FreeBSD)
		OLDINITCTL=/etc/.initctl
		;;
	  *)
		OLDINITCTL=/dev/initctl
		;;
	esac

	# PID of init; may not always be 1 but this code isn't run in
	# these cases (Hurd).  Use for sending signals and checking if
	# init is running.
	PID=1

	# Create /run/initctl if not present, and also create compatibility
	# symlinks
	if [ ! -p "$INITCTL" ]
	then
		# Create new control channel
		echo "sysvinit: creating $INITCTL"
		rm -f $INITCTL
		mkfifo -m 600 $INITCTL
	fi

	# Replace old control channel with symlink
	ln -s "$INITCTL" "$OLDINITCTL.new"
	mv "$OLDINITCTL.new" "$OLDINITCTL"

	# Reopen control channel (uses new channel).
	kill -s USR1 "$PID"

	# Tell init to re-exec itself. Loop on failure to reduce the chance of a
	# race before the new control channel is opened.
	echo -n "sysvinit: restarting..."
	for delay in 0 1 2 3 4 5 6 fail; do
		if init u; then
			echo " done."
			break
		else
			if [ "$delay" = "fail" ]; then
				echo " failed."
			else
				echo -n "."
				sleep "$delay"
			fi
		fi
	done
}

umask 022

case "$1" in
	configure)
		if [ -z "$2" ]; then
			# New installation
			skip_restart=1
		fi

		rm -f "$DPKG_ROOT/etc/ioctl.save"

		if [ ! -f "$DPKG_ROOT/etc/inittab" ]; then
			cp -p "$DPKG_ROOT/usr/share/sysvinit/inittab" "$DPKG_ROOT/etc/inittab"
		fi
		;;
	triggered)
		# Restart, if possible
		;;
	abort-upgrade | abort-remove | abort-deconfigure)
		exit 0
		;;
	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
		;;
esac

if ischroot --default-true ||
	[ -n "${DPKG_ROOT:-}" ] ||
	[ -d "$DPKG_ROOT/run/systemd/system" ] ||
	[ "$(uname -s)" = "GNU" ]; then
	skip_restart=1
fi

if [ "$skip_restart" ]; then
	echo "Not restarting sysvinit"
else
	do_restart
fi

#DEBHELPER#

exit 0
